apiVersion: v1
kind: Namespace
metadata:
  name: dev
  labels:
    env: dev
---
#Deploy web
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: nginx-deployment
  namespace: dev
  labels:
    app: nginx-deploy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-pod
  template:
    metadata:
      namespace: dev
      labels:
        app: nginx-pod
    spec:
      containers:
        - name: nginx-container
          image: nginx:alpine
          volumeMounts:
            - name: servers-nginx
              mountPath: /etc/nginx/conf.d/
            - name: page-nginx
              mountPath: /usr/share/nginx/html/
      volumes:
        - name: servers-nginx
          configMap:
            name: nginx-conf
            items:
              - key: nginx
                path: default.conf
        - name: page-nginx
          configMap:
            name: nginx-conf
            items:
              - key: page
                path: index.html
---
#Service for deploy web
apiVersion: v1
kind: Service
metadata: 
  name: nginx-service
  namespace: dev
  labels:
    app: proxy-service
spec:
  type: NodePort
  selector:
    app: nginx-pod
  ports:
    - protocol: TCP
      port: 80
---
#Deploy backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-deployment
  namespace: dev
  labels:
    app: python-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: python-pod
  template:
    metadata:
      namespace: dev
      labels:
        app: python-pod
    spec:
      containers:
        - name: python-container
          image: python:3.6-alpine
          env:
            - name: USER
              value: "Eduar"
          command: ['sh', '-c', 'echo "Este es el backend y fue hecho por $USER" > index.html && python -m http.server 9090']
---
#Service backend
apiVersion: v1
kind: Service
metadata:
  name: python-service
  namespace: dev
  labels:
    app: backend-service
spec:
  type: ClusterIP
  selector: 
    app: python-pod
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 9090
---
#Bd deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bd-deployment
  namespace: dev
  labels:
    app: bd-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bd-pod
  template:
    metadata:
      namespace: dev
      labels:
        app: bd-pod
    spec:
      containers:
        - name: bd-container
          image: mysql:5.6
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bd-root
                  key: root-password
          volumeMounts:
            - name: bd-secret
              mountPath: "/etc/secrets"
              readOnly: true
            - name: bd-data
              mountPath: "/var/lib/mysql"
      volumes:
        - name: bd-secret
          secret: 
            secretName: bd-root
            items:
              - key: root-password
                path: root-password.txt
        - name: bd-data
          persistentVolumeClaim:
            claimName: pvc-database
---
#Service bd
apiVersion: v1
kind: Service
metadata:
  name: bd-service
  namespace: dev
  labels:
    app: bd-service
spec:
  type: NodePort
  selector:
    app: bd-pod
  ports:
    - protocol: TCP
      port: 3306
---
# configmap nginx
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: dev
  labels:
    app: config-nginx
data: 
  nginx: |
    server {
        listen 80;
        server_name localhost;
  
        location /home {
          root /usr/share/nginx/html;
          index index.html index.html;
        }

        location /proxy {
          proxy_pass http://python-service:8080;
        }
      }
  page: |
    <h2>Esta es una p√°gina html montada desde un volumen</h2>
---
#ResourceQuota
apiVersion: v1
kind: ResourceQuota
metadata: 
  name: resource-quota-dev
  namespace: dev
spec:
  hard:
    requests.cpu: "1"
    requests.memory: 1.5Gi
    limits.cpu: "2"
    limits.memory: 3Gi
---
#LimitRange por pod
apiVersion: v1
kind: LimitRange
metadata:
  name: limit-range-dev
  namespace: dev
spec:
  limits:
    - max:
        memory: 300Mi
        cpu: 300m
      min:
        memory: 150Mi
        cpu: 150m
      type: Pod
---
#Secretos de la bd
apiVersion: v1
kind: Secret
metadata: 
  name: bd-root
  namespace: dev
type: Opaque
stringData:
  root-password: root
---
#PV database
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-database
  namespace: dev
  labels:
    app: bd-pv
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/eduar/k8s/example/bd"
---
#PVC database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-database
  namespace: dev
  labels:
    app: bd-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      app: bd-pv